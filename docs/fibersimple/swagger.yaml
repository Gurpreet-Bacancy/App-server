basePath: /
definitions:
  types.Coordinates:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  types.UserCoordinateItem:
    properties:
      distance:
        type: number
      latitude:
        type: number
      longitude:
        type: number
      userID:
        type: integer
    type: object
  types.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  types.UserLoginResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This about user location details
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Swagger API
  version: "2.0"
paths:
  /healthcheck:
    get:
      consumes:
      - application/octet-stream
      description: get the status of server.
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /login:
    post:
      consumes:
      - application/octet-stream
      description: user success to login then generate active token
      parameters:
      - description: user login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/types.UserLoginRequest'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.UserLoginResponse'
      summary: check user login
      tags:
      - root
  /v1/location:
    get:
      consumes:
      - application/octet-stream
      description: it takes user token and fetch user location from db.
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: get user location.
      tags:
      - root
    post:
      consumes:
      - application/octet-stream
      description: it takes user token and fetch user location from db if exits otherwise
        creates new.
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: add user new location if exits location it updates.
      tags:
      - root
    put:
      consumes:
      - application/octet-stream
      description: it takes user token and fetch user location from db and updates
        to it.
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: updates user new location if exits location it updates.
      tags:
      - root
  /v1/nearest/user:
    post:
      consumes:
      - application/octet-stream
      description: it give nearest 10 user.
      parameters:
      - description: user cooridnates
        in: body
        name: coordinates
        required: true
        schema:
          $ref: '#/definitions/types.Coordinates'
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.UserCoordinateItem'
            type: array
      summary: get Get Nearest User.
      tags:
      - root
schemes:
- http
swagger: "2.0"
